{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/updateUser.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\n\nclass UpdateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const {\n        userName,\n        surname,\n        Email,\n        userGroup,\n        subscribeto,\n        userId\n      } = this.state;\n      axios.put(\"http://localhost:3000/users/\" + userId, {\n        id: userId,\n        name: userName,\n        surname,\n        Email,\n        userGroup,\n        subscribeto\n      }, {\n        credentials: 'include'\n      }, {\n        withCredentials: true\n      }).then(response => {\n        data = userList.filter(value => parseInt(value.id) !== parseInt(userId));\n        this.setState({\n          userList: data\n        });\n        data.splice(position, 0, userList);\n        this.setState({\n          userList\n        });\n      }).catch(error => {\n        console.log(\"Update error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.handleChange = (e, textFor) => {\n      const ele = e.target.value;\n\n      switch (textFor) {\n        case \"userName\":\n          this.setState({\n            userName: ele\n          });\n          break;\n\n        case \"surname\":\n          this.setState({\n            surname: ele\n          });\n          break;\n\n        case \"Email\":\n          this.setState({\n            Email: ele\n          });\n          break;\n\n        case \"userGroup\":\n          this.setState({\n            userGroup: $('#userGroup').val()\n          });\n          break;\n\n        case \"subscribeto\":\n          this.setState({\n            subscribeto: $('#subscribeTo').val()\n          });\n          break;\n      }\n    };\n\n    this.state = {\n      userId: this.props.userId,\n      userList: this.props.userList,\n      userName: \"\",\n      surname: \"\",\n      Email: \"\",\n      userGroup: \"\",\n      subscribeto: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    localStorage.getItem('users') && this.setState({\n      users: JSON.parse(localStorage.getItem('users')),\n      isLoading: false\n    });\n    localStorage.getItem('userList') && this.setState({\n      userList: JSON.parse(localStorage.getItem('userList')),\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    const {\n      userId,\n      userList\n    } = this.state;\n    userList.map(value => {\n      if (parseInt(userId) === parseInt(value.id)) {\n        this.setState({\n          userName: value.name,\n          surname: value.surname,\n          Email: value.Email,\n          userGroup: value.userGroup,\n          subscribeto: value.subscribeTo\n        });\n      }\n    });\n    this.eventType();\n  }\n\n  eventType() {\n    let eventtype = [];\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      $.each(res.eventtype, function (index, value) {\n        eventtype.push({\n          id: value.id,\n          name: value.name\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('users', JSON.stringify(nextState.users));\n    localStorage.setItem('userList', JSON.stringify(nextState.userList));\n  }\n\n  render() {\n    const {\n      userName,\n      surname,\n      Email,\n      subscribeto,\n      userGroup,\n      eventtype\n    } = this.state;\n    let subscribeToDom = \"\";\n\n    if (eventtype !== undefined) {\n      subscribeToDom = eventtype.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success m-2\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-borderless usertable\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: userName,\n                    onChange: e => this.handleChange(e, \"userName\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Surname :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: surname,\n                    onChange: e => this.handleChange(e, \"surname\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Email :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: Email,\n                    onChange: e => this.handleChange(e, \"Email\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Group :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: userGroup,\n                    id: \"userGroup\",\n                    className: \"browser-default custom-select\",\n                    onChange: e => this.handleChange(e, \"userGroup\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Admin\",\n                      children: \"Admin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"User\",\n                      children: \"User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Subscribe To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: subscribeto,\n                    id: \"subscribeTo\",\n                    className: \"browser-default custom-select\",\n                    multiple: true,\n                    onChange: e => this.handleChange(e, \"subscribeTo\"),\n                    children: subscribeToDom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UpdateUser;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/updateUser.js"],"names":["React","Component","$","axios","UpdateUser","constructor","props","handleSubmit","event","userName","surname","Email","userGroup","subscribeto","userId","state","put","id","name","credentials","withCredentials","then","response","data","userList","filter","value","parseInt","setState","splice","position","catch","error","console","log","preventDefault","handleChange","e","textFor","ele","target","val","bind","componentWillMount","localStorage","getItem","users","JSON","parse","isLoading","componentDidMount","map","subscribeTo","eventType","eventtype","urleventtype","fetch","json","res","each","index","push","componentWillUpdate","nextProps","nextState","setItem","stringify","render","subscribeToDom","undefined","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\n\nclass UpdateUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userId: this.props.userId,\n            userList: this.props.userList,\n            userName: \"\",\n            surname: \"\",\n            Email: \"\",\n            userGroup: \"\",\n            subscribeto: \"\",\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount() {\n        localStorage.getItem('users') && this.setState({\n            users: JSON.parse(localStorage.getItem('users')),\n            isLoading: false\n        });\n        localStorage.getItem('userList') && this.setState({\n            userList: JSON.parse(localStorage.getItem('userList')),\n            isLoading: false\n        })\n    }\n\n    componentDidMount() {\n        const { userId, userList } = this.state;\n        userList.map((value) => {\n            if (parseInt(userId) === parseInt(value.id)) {\n                this.setState({\n                    userName: value.name,\n                    surname: value.surname,\n                    Email: value.Email,\n                    userGroup: value.userGroup,\n                    subscribeto: value.subscribeTo,\n                })\n            }\n        })\n        this.eventType();\n    }\n\n    handleSubmit = (event) => {\n        const { userName, surname, Email, userGroup, subscribeto, userId } = this.state;\n        \n        axios\n            .put(\n                \"http://localhost:3000/users/\"+userId,\n                {\n                    id:userId,\n                    name: userName,\n                    surname,\n                    Email,\n                    userGroup,\n                    subscribeto\n                },\n                { credentials: 'include' },\n                { withCredentials: true }\n            )\n            .then(response => {\n                data = userList.filter(value => parseInt(value.id) !== parseInt(userId));\n                this.setState({ userList : data});\n                \n                data.splice(position, 0, userList);\n                this.setState({ userList });\n            })\n            .catch(error => {\n                console.log(\"Update error\", error);\n            });\n        event.preventDefault();\n    }\n\n    eventType() {\n        let eventtype = [];\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                $.each(res.eventtype, function (index, value) {\n                    eventtype.push({\n                        id: value.id,\n                        name: value.name\n                    });\n                });\n\n                this.setState(() => ({ eventtype }));\n            }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n    }\n\n    handleChange = (e, textFor) => {\n        const ele = e.target.value;\n        switch (textFor) {\n            case \"userName\":\n                this.setState({ userName: ele });\n                break;\n            case \"surname\":\n                this.setState({ surname: ele });\n                break;\n            case \"Email\":\n                this.setState({ Email: ele });\n                break;\n            case \"userGroup\":\n                this.setState({ userGroup:  $('#userGroup').val() });\n                break;\n            case \"subscribeto\":\n                this.setState({ subscribeto:  $('#subscribeTo').val() });\n                break;\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem('users', JSON.stringify(nextState.users));\n        localStorage.setItem('userList', JSON.stringify(nextState.userList));\n    }\n\n\n    render() {\n        const { userName, surname, Email, subscribeto, userGroup, eventtype } = this.state;\n\n        let subscribeToDom = \"\";\n        if (eventtype !== undefined) {\n            subscribeToDom = eventtype.map((item) => {\n                return (\n                    <option key={item.id} value={item.id}>{item.name}</option>\n                )\n            })\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row d-flex justify-content-end\">\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-success m-2\">\n                            Submit\n                    </button>\n                    </div>\n                    <div className=\"row\">\n                        <table className=\"table table-borderless usertable\">\n                            <tbody>\n                                <tr>\n                                    <td >\n                                        User Name :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={userName}\n                                            onChange={(e) => this.handleChange(e, \"userName\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Surname :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={surname}\n                                            onChange={(e) => this.handleChange(e, \"surname\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Email :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            value={Email}\n                                            onChange={(e) => this.handleChange(e, \"Email\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        User Group :\n                                </td>\n                                    <td>\n                                        <select value={userGroup} id=\"userGroup\" className=\"browser-default custom-select\"\n                                            onChange={(e) => this.handleChange(e, \"userGroup\")}>\n                                            <option value=\"Admin\">Admin</option>\n                                            <option value=\"User\">User</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        Subscribe To :\n                                 </td>\n                                    <td>\n                                        <select value={subscribeto} id=\"subscribeTo\" className=\"browser-default custom-select\" multiple\n                                            onChange={(e) => this.handleChange(e, \"subscribeTo\")}>\n                                            {subscribeToDom}\n                                        </select>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}