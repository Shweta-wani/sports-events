{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/addUser.js\";\nimport React, { Component } from 'react';\n\nclass AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      surname: \"\",\n      Email: \"\",\n      userGroup: \"\",\n      subscribeto: \"\"\n    };\n  }\n\n  handleChange(e, textFor) {\n    const text = e.target.value;\n\n    switch (textFor) {\n      case \"userName\":\n        this.setState({\n          userName: text\n        });\n        break;\n\n      case \"surname\":\n        this.setState({\n          surname: text\n        });\n        break;\n\n      case \"Email\":\n        this.setState({\n          Email: text\n        });\n        break;\n\n      case \"userGroup\":\n        this.setState({\n          userGroup: text\n        });\n        break;\n\n      case \"subscribeto\":\n        this.setState({\n          subscribeto: text\n        });\n        break;\n    }\n  }\n\n  handleSubmit(event) {\n    const {\n      users,\n      username,\n      password\n    } = this.state;\n    axios.post(\"http://localhost:3000/users\", {\n      user: {\n        name: username,\n        password: password\n      }\n    }, {\n      credentials: 'include'\n    }, {\n      withCredentials: true\n    }).then(response => {\n      let loginUser = users.map(value => value).filter(value => value.name === username && value.password === password);\n      let params = loginUser[0].name;\n      this.props.handleLogin(loginUser, users);\n      this.props.history.push(\"/users/\" + params);\n    }).catch(error => {\n      console.log(\"login error\", error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-borderless usertable\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User Name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.userName,\n                onChange: e => this.handleChange(e, \"userName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User Surname :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.surname,\n                onChange: e => this.handleChange(e, \"surname\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User Email :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.Email,\n                onChange: e => this.handleChange(e, \"Email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"User Group :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.userGroup,\n                onChange: e => this.handleChange(e, \"userGroup\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Subscribe To :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.subscribeto,\n                onChange: e => this.handleChange(e, \"subscribeto\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success m-2\",\n        onClick: e => this.handelDisplay('addUser'),\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/addUser.js"],"names":["React","Component","AddUser","constructor","props","state","userName","surname","Email","userGroup","subscribeto","handleChange","e","textFor","text","target","value","setState","handleSubmit","event","users","username","password","axios","post","user","name","credentials","withCredentials","then","response","loginUser","map","filter","params","handleLogin","history","push","catch","error","console","log","preventDefault","render","handelDisplay"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,EADF;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,WAAW,EAAE;AALJ,KAAb;AAOH;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAIC,OAAJ,EAAa;AACrB,UAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAtB;;AACA,YAAQH,OAAR;AACI,WAAK,UAAL;AACI,aAAKI,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAAEQ;AAAZ,SAAd;AACA;;AACJ,WAAK,SAAL;AACI,aAAKG,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAEO;AAAX,SAAd;AACA;;AACJ,WAAK,OAAL;AACI,aAAKG,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEM;AAAT,SAAd;AACA;;AACJ,WAAK,WAAL;AACI,aAAKG,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAEK;AAAb,SAAd;AACA;;AACJ,WAAK,aAAL;AACI,aAAKG,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEI;AAAf,SAAd;AACA;AAfR;AAiBH;;AAEDI,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAgC,KAAKjB,KAA3C;AAEAkB,IAAAA,KAAK,CACFC,IADH,CAEI,6BAFJ,EAGI;AACEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEL,QADF;AAEJC,QAAAA,QAAQ,EAAEA;AAFN;AADR,KAHJ,EASI;AAAEK,MAAAA,WAAW,EAAE;AAAf,KATJ,EAUI;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAVJ,EAYGC,IAZH,CAYQC,QAAQ,IAAI;AAChB,UAAIC,SAAS,GAAGX,KAAK,CAACY,GAAN,CAAWhB,KAAD,IAAWA,KAArB,EAA4BiB,MAA5B,CAAmCjB,KAAK,IAAIA,KAAK,CAACU,IAAN,KAAeL,QAAf,IAA2BL,KAAK,CAACM,QAAN,KAAmBA,QAA1F,CAAhB;AACA,UAAIY,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAT,CAAaL,IAA1B;AACA,WAAKtB,KAAL,CAAW+B,WAAX,CAAuBJ,SAAvB,EAAkCX,KAAlC;AACA,WAAKhB,KAAL,CAAWgC,OAAX,CAAmBC,IAAnB,CAAwB,YAAYH,MAApC;AACD,KAjBH,EAkBGI,KAlBH,CAkBSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACD,KApBH;AAqBApB,IAAAA,KAAK,CAACuB,cAAN;AACD;;AAGHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,kCAAjB;AAAA,+BACI;AAAA,kCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,KAAK,EAAE,KAAKtC,KAAL,CAAWC,QAHtB;AAII,gBAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,UAArB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,OAHtB;AAII,gBAAA,QAAQ,EAAGK,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,SAArB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eA2BI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,KAHtB;AAII,gBAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAoB,OAApB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ,eAwCI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWI,SAHtB;AAII,gBAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAoB,WAApB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxCJ,eAqDI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWK,WAHtB;AAII,gBAAA,QAAQ,EAAGE,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAoB,aAApB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAsEA;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAC,qBAFV;AAGA,QAAA,OAAO,EAAGA,CAAD,IAAO,KAAKgC,aAAL,CAAmB,SAAnB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8EH;;AA5I2B;;AA+IhC,eAAe1C,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName : \"\",\n            surname: \"\",\n            Email: \"\",\n            userGroup: \"\",\n            subscribeto: \"\"\n        }\n    }\n\n    handleChange(e, textFor) {\n        const text = e.target.value;\n        switch (textFor) {\n            case \"userName\":\n                this.setState({ userName: text });\n                break;\n            case \"surname\":\n                this.setState({ surname: text });\n                break;\n            case \"Email\":\n                this.setState({ Email: text });\n                break;\n            case \"userGroup\":\n                this.setState({ userGroup: text });\n                break;\n            case \"subscribeto\":\n                this.setState({ subscribeto: text });\n                break;\n          }\n    }\n\n    handleSubmit(event) {\n        const { users, username, password } = this.state;\n    \n        axios\n          .post(\n            \"http://localhost:3000/users\",\n            {\n              user: {\n                name: username,\n                password: password\n              }\n            },\n            { credentials: 'include' },\n            { withCredentials: true }\n          )\n          .then(response => {\n            let loginUser = users.map((value) => value).filter(value => value.name === username && value.password === password);\n            let params = loginUser[0].name;\n            this.props.handleLogin(loginUser, users);\n            this.props.history.push(\"/users/\" + params);\n          })\n          .catch(error => {\n            console.log(\"login error\", error);\n          });\n        event.preventDefault();\n      }\n    \n\n    render() {\n        return (\n            <div>\n            <table className=\"table table-borderless usertable\">\n                <tbody>\n                    <tr>\n                        <td >\n                            User Name :\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.userName}\n                                onChange={(e) => this.handleChange(e, \"userName\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            User Surname :\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.surname}\n                                onChange={(e) => this.handleChange(e, \"surname\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            User Email :\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.Email}\n                                onChange={(e) => this.handleChange(e,\"Email\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr >\n                        <td>\n                            User Group :\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.userGroup}\n                                onChange={(e) => this.handleChange(e,\"userGroup\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr >\n                        <td>\n                            Subscribe To :\n                        </td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.subscribeto}\n                                onChange={(e) => this.handleChange(e,\"subscribeto\")}\n                            />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button\n            type=\"submit\"\n            className=\"btn btn-success m-2\"\n            onClick={(e) => this.handelDisplay('addUser')}\n          >Add User</button>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}