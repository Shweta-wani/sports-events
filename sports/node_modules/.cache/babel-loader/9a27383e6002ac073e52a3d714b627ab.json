{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/events.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersubscribeTo: this.props.value.subscribeTo\n    };\n  }\n\n  componentDidMount() {\n    let events,\n        eventtype = [];\n    const urlevents = \"http://localhost:3000/events\";\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      console.log(res.events);\n      console.log(this.state.usersubscribeTo);\n      $.each(this.state.usersubscribeTo, function (i, val) {\n        $.each(res.eventtype, function (index, value) {\n          if (val === value.id) {\n            eventtype.push({\n              id: value.id,\n              name: value.name\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n    fetch(urlevents).then(response => response.json()).then(res => {\n      console.log(res.events);\n      console.log(this.state.usersubscribeTo);\n      $.each(this.state.usersubscribeTo, function (i, val) {\n        $.each(res.events, function (index, value) {\n          if (val === value.name) {\n            events.push({\n              id: value.id,\n              name: value.name,\n              description: value.description,\n              start: value.start,\n              end: value.end,\n              location: value.location\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        events\n      }));\n    }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    let {\n      events\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/events.js"],"names":["React","Component","$","Events","constructor","props","state","usersubscribeTo","value","subscribeTo","componentDidMount","events","eventtype","urlevents","urleventtype","fetch","then","response","json","res","console","log","each","i","val","index","id","push","name","setState","catch","url","description","start","end","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usersubscribeTo: this.props.value.subscribeTo\n        }\n    }\n\n    componentDidMount() {\n        let events, eventtype = [];\n        const urlevents = \"http://localhost:3000/events\";\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                console.log(res.events)\n                console.log(this.state.usersubscribeTo)\n                $.each(this.state.usersubscribeTo, function (i, val) {\n                    $.each(res.eventtype, function (index, value) {\n                        if (val === value.id) {\n                            eventtype.push({\n                                id: value.id,\n                                name: value.name,\n                            \n                            });\n                        }\n\n                    });\n                })\n\n                this.setState(() => ({ eventtype }));\n\n            }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n \n\n        fetch(urlevents)\n            .then(response => response.json())\n            .then(res => {\n                console.log(res.events)\n                console.log(this.state.usersubscribeTo)\n                $.each(this.state.usersubscribeTo, function (i, val) {\n                    $.each(res.events, function (index, value) {\n                        if (val === value.name) {\n                            events.push({\n                                id: value.id,\n                                name: value.name,\n                                description: value.description,\n                                start: value.start,\n                                end: value.end,\n                                location: value.location\n                            });\n                        }\n\n                    });\n                })\n\n                this.setState(() => ({ events }));\n\n            }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n    }\n\n    render() {\n        let { events } = this.state;\n\n        \n\n        return (<div>{  }</div>);\n    }\n}\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}