{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/events.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport GoogleMapReact from 'google-map-react';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersubscribeTo: this.props.value.subscribeTo\n    };\n  }\n\n  componentDidMount() {\n    let events = [];\n    let eventtype = [];\n    const urlevents = \"http://localhost:3000/events\";\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      $.each(this.state.usersubscribeTo, function (i, val) {\n        $.each(res.eventtype, function (index, value) {\n          if (val.toLowerCase() === value.id.toLowerCase()) {\n            eventtype.push({\n              id: value.id,\n              name: value.name\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Can’t access \" + urleventtype + \" response. Blocked by browser?\"));\n    fetch(urlevents).then(response => response.json()).then(res => {\n      $.each(this.state.eventtype, function (i, val) {\n        $.each(res.events, function (index, value) {\n          if (val.name.toLowerCase() === value.name.toLowerCase()) {\n            events.push({\n              id: value.id,\n              name: value.name,\n              description: value.description,\n              start: value.start,\n              end: value.end,\n              location: value.location\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        events\n      }));\n    }).catch(() => console.log(\"Can’t access \" + urlevents + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    let {\n      events\n    } = this.state;\n    let eventList;\n\n    if (events !== undefined) {\n      eventList = events.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, item.name + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, item.description + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.start\n            }, item.start + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.end\n            }, item.end + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.location\n            }, item.location + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-map-marker m-2\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this)\n            }, item.location + index + \"map\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, item.id + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered eventtable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Type \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Description \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Start \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event End \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), eventList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/events.js"],"names":["React","Component","$","GoogleMapReact","Events","constructor","props","state","usersubscribeTo","value","subscribeTo","componentDidMount","events","eventtype","urlevents","urleventtype","fetch","then","response","json","res","each","i","val","index","toLowerCase","id","push","name","setState","catch","console","log","description","start","end","location","render","eventList","undefined","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport GoogleMapReact from 'google-map-react';\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usersubscribeTo: this.props.value.subscribeTo\n        }\n    }\n\n    componentDidMount() {\n        let events = [];\n        let eventtype = [];\n        const urlevents = \"http://localhost:3000/events\";\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                $.each(this.state.usersubscribeTo, function (i, val) {\n                    $.each(res.eventtype, function (index, value) {\n                        if (val.toLowerCase() === value.id.toLowerCase()) {\n                            eventtype.push({\n                                id: value.id,\n                                name: value.name\n                            });\n                        }\n                    });\n                })\n                this.setState(() => ({ eventtype }));\n            }).catch(() => console.log(\"Can’t access \" + urleventtype + \" response. Blocked by browser?\"));\n\n\n        fetch(urlevents)\n            .then(response => response.json())\n            .then(res => {\n                $.each(this.state.eventtype, function (i, val) {\n                    $.each(res.events, function (index, value) {\n                        if (val.name.toLowerCase() === value.name.toLowerCase()) {\n                            events.push({\n                                id: value.id,\n                                name: value.name,\n                                description: value.description,\n                                start: value.start,\n                                end: value.end,\n                                location: value.location\n                            });\n                        }\n                    });\n                })\n                this.setState(() => ({ events }));\n            }).catch(() => console.log(\"Can’t access \" + urlevents + \" response. Blocked by browser?\"));\n    }\n\n    render() {\n        let { events } = this.state;\n        let eventList;\n        if (events !== undefined) {\n            eventList = events.map((item, index) => {\n                return (\n                    <tbody key={item.id}>\n                        <tr key={item.id + index}>\n                            <td key={item.name + index}>\n                                {item.name}\n                            </td>\n                            <td key={item.description + index}>\n                                {item.description}\n                            </td>\n                            <td key={item.start + index}>\n                                {item.start}\n                            </td>\n                            <td key={item.end + index}>\n                                {item.end}\n                            </td>\n                            <td key={item.location + index}>\n                                {item.location}\n                            </td>\n                            <td key={item.location + index + \"map\"}>\n                            <i className=\"fas fa-map-marker m-2\"\n                                aria-hidden=\"true\"\n                                >\n                            </i>\n                            </td>\n                        </tr>\n                    </tbody>\n                )\n            })\n        }\n        return (\n            <div>\n                <table className=\"table table-bordered eventtable\">\n                    <thead>\n                        <tr>\n                            <th><label>Event Type </label> </th>\n                            <th><label>Event Description </label> </th>\n                            <th><label>Event Start </label> </th>\n                            <th><label>Event End </label> </th>\n                            <th><label>Event Location</label> </th>\n                            <th><label>Map</label> </th>\n                        </tr>\n                    </thead>\n                    {eventList}\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}