{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/addUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass AddUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const {\n        userName,\n        surname,\n        Email,\n        userList,\n        subscribeto,\n        userGroup\n      } = this.state;\n      const position = parseInt(userId) - 1;\n      axios.post(\"http://localhost:3000/users/:name\", {\n        name: userName,\n        surname,\n        Email,\n        userGroup: $('#userGroup').val(),\n        subscribeto: $('#subscribeTo').val()\n      }, {\n        credentials: 'include'\n      }, {\n        withCredentials: true\n      }).then(response => {\n        data = userList.filter(value => parseInt(value.id) !== parseInt(userId)); //this.setState({ userList : data});\n\n        data.splice(position, 0, us);\n        fs.writeFileSync(path.resolve(__dirname, '../public/services/users.json'), JSON.stringify(data));\n        this.setState({\n          userList\n        });\n        this.props.onSubmitButton();\n      }).catch(error => {\n        console.log(\"login error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      userList: this.props.userList,\n      userName: \"\",\n      surname: \"\",\n      Email: \"\",\n      userGroup: \"\",\n      subscribeto: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.eventType = this.eventType.bind(this);\n  }\n\n  handleChange(e, textFor) {\n    const ele = e.target.value;\n\n    switch (textFor) {\n      case \"userName\":\n        this.setState({\n          userName: ele\n        });\n        break;\n\n      case \"surname\":\n        this.setState({\n          surname: ele\n        });\n        break;\n\n      case \"Email\":\n        this.setState({\n          Email: ele\n        });\n        break;\n\n      case \"userGroup\":\n        this.setState({\n          userGroup: $('#userGroup').val()\n        });\n        break;\n\n      case \"subscribeto\":\n        this.setState({\n          subscribeto: $('#subscribeTo').val()\n        });\n        break;\n    }\n  }\n\n  componentWillMount() {\n    localStorage.getItem('users') && this.setState({\n      users: JSON.parse(localStorage.getItem('users')),\n      isLoading: false\n    });\n    localStorage.getItem('userList') && this.setState({\n      userList: JSON.parse(localStorage.getItem('userList')),\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.eventType();\n  }\n\n  eventType() {\n    let eventtype = [];\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      $.each(res.eventtype, function (index, value) {\n        eventtype.push({\n          id: value.id,\n          name: value.name\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('users', JSON.stringify(nextState.users));\n    localStorage.setItem('userList', JSON.stringify(nextState.userList));\n  }\n\n  render() {\n    const {\n      userName,\n      surname,\n      Email,\n      eventtype,\n      subscribeto,\n      userGroup\n    } = this.state;\n    let subscribeToDom = \"\";\n\n    if (eventtype !== undefined) {\n      subscribeToDom = eventtype.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success m-2\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-borderless usertable\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: userName,\n                    onChange: e => this.handleChange(e, \"userName\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Surname :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: surname,\n                    onChange: e => this.handleChange(e, \"surname\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Email :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: Email,\n                    onChange: e => this.handleChange(e, \"Email\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Group :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: userGroup,\n                    id: \"userGroup\",\n                    className: \"browser-default custom-select\",\n                    onChange: e => this.handleChange(e, \"userGroup\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Admin\",\n                      children: \"Admin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"User\",\n                      children: \"User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Subscribe To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: subscribeto,\n                    id: \"subscribeTo\",\n                    className: \"browser-default custom-select\",\n                    multiple: true,\n                    onChange: e => this.handleChange(e, \"subscribeto\"),\n                    children: subscribeToDom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/addUser.js"],"names":["React","Component","axios","$","AddUser","constructor","props","handleSubmit","event","userName","surname","Email","userList","subscribeto","userGroup","state","position","parseInt","userId","post","name","val","credentials","withCredentials","then","response","data","filter","value","id","splice","us","fs","writeFileSync","path","resolve","__dirname","JSON","stringify","setState","onSubmitButton","catch","error","console","log","preventDefault","bind","eventType","handleChange","e","textFor","ele","target","componentWillMount","localStorage","getItem","users","parse","isLoading","componentDidMount","eventtype","urleventtype","fetch","json","res","each","index","push","componentWillUpdate","nextProps","nextState","setItem","render","subscribeToDom","undefined","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: this.props.userList,\n            userName: \"\",\n            surname: \"\",\n            Email: \"\",\n            userGroup: \"\",\n            subscribeto: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.eventType = this.eventType.bind(this);\n    }\n\n    handleChange(e, textFor) {\n        const ele = e.target.value;\n        switch (textFor) {\n            case \"userName\":\n                this.setState({ userName: ele });\n                break;\n            case \"surname\":\n                this.setState({ surname: ele });\n                break;\n            case \"Email\":\n                this.setState({ Email: ele });\n                break;\n            case \"userGroup\":\n                this.setState({ userGroup: $('#userGroup').val() });\n                break;\n            case \"subscribeto\":\n                this.setState({ subscribeto: $('#subscribeTo').val() });\n                break;\n        }\n    }\n\n    componentWillMount() {\n        localStorage.getItem('users') && this.setState({\n            users: JSON.parse(localStorage.getItem('users')),\n            isLoading: false\n        });\n        localStorage.getItem('userList') && this.setState({\n            userList: JSON.parse(localStorage.getItem('userList')),\n            isLoading: false\n        })\n    }\n\n    componentDidMount() {\n        this.eventType();\n    }\n\n    eventType() {\n        let eventtype = [];\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                $.each(res.eventtype, function (index, value) {\n                    eventtype.push({\n                        id: value.id,\n                        name: value.name\n                    });\n                });\n\n                this.setState(() => ({ eventtype }));\n            }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n    }\n\n    handleSubmit = (event) => {\n        const { userName, surname, Email, userList, subscribeto, userGroup } = this.state;\n        const position = parseInt(userId) - 1;\n\n        axios\n            .post(\n                \"http://localhost:3000/users/:name\",\n                {\n                    name: userName,\n                    surname,\n                    Email,\n                    userGroup: $('#userGroup').val(),\n                    subscribeto: $('#subscribeTo').val()\n                },\n                { credentials: 'include' },\n                { withCredentials: true }\n            )\n            .then(response => {\n                data = userList.filter(value => parseInt(value.id) !== parseInt(userId));\n                //this.setState({ userList : data});\n                \n                data.splice(position, 0, us);\n                fs.writeFileSync(path.resolve(__dirname, '../public/services/users.json'), JSON.stringify(data));\n \n                this.setState({ userList });\n                this.props.onSubmitButton();\n            })\n            .catch(error => {\n                console.log(\"login error\", error);\n            });\n        event.preventDefault();\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem('users', JSON.stringify(nextState.users));\n        localStorage.setItem('userList', JSON.stringify(nextState.userList));\n    }\n\n\n    render() {\n        const { userName, surname, Email, eventtype, subscribeto, userGroup } = this.state;\n        let subscribeToDom = \"\";\n        if (eventtype !== undefined) {\n            subscribeToDom = eventtype.map((item) => {\n                return (\n                    <option key={item.id} value={item.id}>{item.name}</option>\n                )\n            })\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row d-flex justify-content-end\">\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-success m-2\">\n                            Submit\n                    </button>\n                    </div>\n                    <div className=\"row\">\n                        <table className=\"table table-borderless usertable\">\n                            <tbody>\n                                <tr>\n                                    <td >\n                                        User Name :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={userName}\n                                            onChange={(e) => this.handleChange(e, \"userName\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Surname :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={surname}\n                                            onChange={(e) => this.handleChange(e, \"surname\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Email :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            value={Email}\n                                            onChange={(e) => this.handleChange(e, \"Email\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        User Group :\n                                </td>\n                                    <td>\n                                        <select value={userGroup} id=\"userGroup\" className=\"browser-default custom-select\"\n                                            onChange={(e) => this.handleChange(e, \"userGroup\")}>\n                                            <option value=\"Admin\">Admin</option>\n                                            <option value=\"User\">User</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        Subscribe To :\n                                 </td>\n                                    <td>\n                                        <select value={subscribeto} id=\"subscribeTo\" className=\"browser-default custom-select\" multiple\n                                            onChange={(e) => this.handleChange(e, \"subscribeto\")}>\n                                            {subscribeToDom}\n                                        </select>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}