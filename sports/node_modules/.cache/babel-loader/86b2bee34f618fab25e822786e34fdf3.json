{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/events.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersubscribeTo: this.props.value.subscribeTo,\n      eve\n    };\n  }\n\n  componentDidMount() {\n    let events = [];\n    const url = \"http://localhost:3000/events\";\n    fetch(url).then(response => response.json()).then(res => {\n      console.log(res.events);\n      console.log(this.state.usersubscribeTo);\n      $.each(this.state.usersubscribeTo, function (i, val) {\n        $.each(res.events, function (index, value) {\n          if (val === value.name) {\n            events.push({\n              id: value.id,\n              name: value.name,\n              description: value.description,\n              start: value.start,\n              end: value.end,\n              location: value.location\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        events\n      }));\n    }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    let {\n      events\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/events.js"],"names":["React","Component","$","Events","constructor","props","state","usersubscribeTo","value","subscribeTo","eve","componentDidMount","events","url","fetch","then","response","json","res","console","log","each","i","val","index","name","push","id","description","start","end","location","setState","catch","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,WADzB;AAETC,MAAAA;AAFS,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,GAAG,GAAG,8BAAZ;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,MAAhB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,eAAvB;AACAL,MAAAA,CAAC,CAACmB,IAAF,CAAO,KAAKf,KAAL,CAAWC,eAAlB,EAAmC,UAAUe,CAAV,EAAaC,GAAb,EAAkB;AACjDrB,QAAAA,CAAC,CAACmB,IAAF,CAAOH,GAAG,CAACN,MAAX,EAAmB,UAAUY,KAAV,EAAiBhB,KAAjB,EAAwB;AACvC,cAAIe,GAAG,KAAKf,KAAK,CAACiB,IAAlB,EAAwB;AACpBb,YAAAA,MAAM,CAACc,IAAP,CAAY;AACRC,cAAAA,EAAE,EAAEnB,KAAK,CAACmB,EADF;AAERF,cAAAA,IAAI,EAAEjB,KAAK,CAACiB,IAFJ;AAGRG,cAAAA,WAAW,EAAEpB,KAAK,CAACoB,WAHX;AAIRC,cAAAA,KAAK,EAAErB,KAAK,CAACqB,KAJL;AAKRC,cAAAA,GAAG,EAAEtB,KAAK,CAACsB,GALH;AAMRC,cAAAA,QAAQ,EAAEvB,KAAK,CAACuB;AANR,aAAZ;AAQH;AAEJ,SAZD;AAaH,OAdD;AAgBA,WAAKC,QAAL,CAAc,OAAO;AAAEpB,QAAAA;AAAF,OAAP,CAAd;AAEH,KAvBL,EAuBOqB,KAvBP,CAuBa,MAAMd,OAAO,CAACC,GAAR,CAAY,kBAAkBP,GAAlB,GAAwB,gCAApC,CAvBnB;AAwBH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,QAAI;AAACtB,MAAAA;AAAD,QAAW,KAAKN,KAApB;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AA1C0B;;AA6C/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usersubscribeTo: this.props.value.subscribeTo,\n            eve\n        }\n    }\n\n    componentDidMount() {\n        let events = [];\n        const url = \"http://localhost:3000/events\";\n\n        fetch(url)\n            .then(response => response.json())\n            .then(res => {\n                console.log(res.events)\n                console.log(this.state.usersubscribeTo)\n                $.each(this.state.usersubscribeTo, function (i, val) {\n                    $.each(res.events, function (index, value) {\n                        if (val === value.name) {\n                            events.push({\n                                id: value.id,\n                                name: value.name,\n                                description: value.description,\n                                start: value.start,\n                                end: value.end,\n                                location: value.location\n                            });\n                        }\n\n                    });\n                })\n\n                this.setState(() => ({ events }));\n\n            }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n    }\n\n    render() {\n        let {events} = this.state\n        return (<div></div>);\n    }\n}\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}