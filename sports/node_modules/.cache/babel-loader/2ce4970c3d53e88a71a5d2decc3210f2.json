{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/events.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport GoogleMapReact from 'google-map-react';\nimport Geocode from \"react-geocode\";\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersubscribeTo: this.props.value.subscribeTo,\n      showMap: false,\n      displayMap: \"\"\n    };\n    this.showMap = this.showMap.bind(this);\n  }\n\n  componentDidMount() {\n    let events = [];\n    let eventtype = [];\n    const urlevents = \"http://localhost:3000/events\";\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      $.each(this.state.usersubscribeTo, function (i, val) {\n        $.each(res.eventtype, function (index, value) {\n          if (val.toLowerCase() === value.id.toLowerCase()) {\n            eventtype.push({\n              id: value.id,\n              name: value.name\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Can’t access \" + urleventtype + \" response. Blocked by browser?\"));\n    fetch(urlevents).then(response => response.json()).then(res => {\n      $.each(this.state.eventtype, function (i, val) {\n        $.each(res.events, function (index, value) {\n          if (val.name.toLowerCase() === value.name.toLowerCase()) {\n            events.push({\n              id: value.id,\n              name: value.name,\n              description: value.description,\n              start: value.start,\n              end: value.end,\n              location: value.location\n            });\n          }\n        });\n      });\n      this.setState(() => ({\n        events\n      }));\n    }).catch(() => console.log(\"Can’t access \" + urlevents + \" response. Blocked by browser?\"));\n  }\n\n  showMap(location) {\n    let locationLat;\n    let locationLng;\n    Geocode.fromAddress(location).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      locationLat = lat;\n      locationLng = lng;\n      console.log(lat, lng);\n    }, error => {\n      console.error(error);\n    });\n    this.setState({\n      showMap: true,\n      displayMap: {}\n    });\n  }\n\n  render() {\n    let {\n      events,\n      showMap,\n      displayMap\n    } = this.state;\n    let eventList;\n    const uluru = {\n      lat: -25.344,\n      lng: 131.036\n    };\n\n    if (events !== undefined) {\n      eventList = events.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, item.name + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, item.description + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.start\n            }, item.start + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.end\n            }, item.end + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.location\n            }, item.location + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-map-marker m-2\",\n                \"aria-hidden\": \"true\",\n                onClick: e => this.showMap(item.location)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, item.location + index + \"map\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, item.id + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered eventtable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Event Type \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Event Description \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Event Start \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Event End \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Event Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), eventList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), showMap ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: [displayMap, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '50vh',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n            defaultCenter: uluru,\n            defaultZoom: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/events.js"],"names":["React","Component","$","GoogleMapReact","Geocode","Events","constructor","props","state","usersubscribeTo","value","subscribeTo","showMap","displayMap","bind","componentDidMount","events","eventtype","urlevents","urleventtype","fetch","then","response","json","res","each","i","val","index","toLowerCase","id","push","name","setState","catch","console","log","description","start","end","location","locationLat","locationLng","fromAddress","lat","lng","results","geometry","error","render","eventList","uluru","undefined","map","item","e","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport GoogleMapReact from 'google-map-react';\nimport Geocode from \"react-geocode\";\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usersubscribeTo: this.props.value.subscribeTo,\n            showMap: false,\n            displayMap: \"\"\n        }\n        this.showMap = this.showMap.bind(this);\n    }\n\n    componentDidMount() {\n        let events = [];\n        let eventtype = [];\n        const urlevents = \"http://localhost:3000/events\";\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                $.each(this.state.usersubscribeTo, function (i, val) {\n                    $.each(res.eventtype, function (index, value) {\n                        if (val.toLowerCase() === value.id.toLowerCase()) {\n                            eventtype.push({\n                                id: value.id,\n                                name: value.name\n                            });\n                        }\n                    });\n                })\n                this.setState(() => ({ eventtype }));\n            }).catch(() => console.log(\"Can’t access \" + urleventtype + \" response. Blocked by browser?\"));\n\n\n        fetch(urlevents)\n            .then(response => response.json())\n            .then(res => {\n                $.each(this.state.eventtype, function (i, val) {\n                    $.each(res.events, function (index, value) {\n                        if (val.name.toLowerCase() === value.name.toLowerCase()) {\n                            events.push({\n                                id: value.id,\n                                name: value.name,\n                                description: value.description,\n                                start: value.start,\n                                end: value.end,\n                                location: value.location\n                            });\n                        }\n                    });\n                })\n                this.setState(() => ({ events }));\n            }).catch(() => console.log(\"Can’t access \" + urlevents + \" response. Blocked by browser?\"));\n    }\n\n    showMap(location) {\n        let locationLat;\n        let locationLng;\n        Geocode.fromAddress(location).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                locationLat = lat;\n                locationLng = lng;\n              console.log(lat, lng);\n            },\n            error => {\n              console.error(error);\n            }\n          );\n        this.setState({ showMap: true, displayMap: {} });\n    }\n\n    render() {\n        let { events, showMap, displayMap } = this.state;\n        let eventList;\n        const uluru = { lat: -25.344, lng: 131.036 };\n\n        if (events !== undefined) {\n            eventList = events.map((item, index) => {\n                return (\n                    <tbody key={item.id}>\n                        <tr key={item.id + index}>\n                            <td key={item.name + index}>\n                                {item.name}\n                            </td>\n                            <td key={item.description + index}>\n                                {item.description}\n                            </td>\n                            <td key={item.start + index}>\n                                {item.start}\n                            </td>\n                            <td key={item.end + index}>\n                                {item.end}\n                            </td>\n                            <td key={item.location + index}>\n                                {item.location}\n                            </td>\n                            <td key={item.location + index + \"map\"}>\n                                <i className=\"fas fa-map-marker m-2\"\n                                    aria-hidden=\"true\"\n                                    onClick={(e) => this.showMap(item.location)}\n                                >\n                                </i>\n                            </td>\n                        </tr>\n                    </tbody>\n                )\n            })\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center\">\n                    <table className=\"table table-bordered eventtable\">\n                        <thead>\n                            <tr>\n                                <th><label>Event Type </label> </th>\n                                <th><label>Event Description </label> </th>\n                                <th><label>Event Start </label> </th>\n                                <th><label>Event End </label> </th>\n                                <th><label>Event Location</label> </th>\n                                <th><label>Map</label> </th>\n                            </tr>\n                        </thead>\n                        {eventList}\n                    </table>\n                </div>\n                {showMap ?\n                    <div className=\"row d-flex justify-content-center\">\n                        {displayMap}\n\n                        <div style={{ height: '50vh', width: '100%' }}>\n                            <GoogleMapReact\n                                defaultCenter={uluru}\n                                defaultZoom={4}\n                            >\n\n                            </GoogleMapReact>\n                        </div>\n                    </div> : null}\n            </div>\n        );\n    }\n}\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}