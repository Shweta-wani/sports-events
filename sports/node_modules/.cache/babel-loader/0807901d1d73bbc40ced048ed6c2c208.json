{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shweta/task/sports/src/componants/addUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass AddUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const {\n        userName,\n        surname,\n        Email,\n        userList\n      } = this.state;\n      axios.post(\"http://localhost:3000/users/:name\", {\n        name: userName,\n        surname,\n        Email,\n        userGroup: $('#userGroup').val(),\n        subscribeto: $('#subscribeTo').val()\n      }, {\n        credentials: 'include'\n      }, {\n        withCredentials: true\n      }).then(response => {\n        userList.push({\n          name: userName,\n          surname,\n          Email,\n          userGroup: $('#userGroup').val(),\n          subscribeto: $('#subscribeTo').val()\n        });\n        this.setState({\n          userList\n        });\n      }).catch(error => {\n        console.log(\"login error\", error);\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      userList: this.props.userList,\n      userName: \"\",\n      surname: \"\",\n      Email: \"\",\n      userGroup: \"\",\n      subscribeto: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.eventType = this.eventType.bind(this);\n  }\n\n  handleChange(e, textFor) {\n    const ele = e.target.value;\n\n    switch (textFor) {\n      case \"userName\":\n        this.setState({\n          userName: ele\n        });\n        break;\n\n      case \"surname\":\n        this.setState({\n          surname: ele\n        });\n        break;\n\n      case \"Email\":\n        this.setState({\n          Email: ele\n        });\n        break;\n    }\n  }\n\n  componentWillMount() {\n    this.eventType();\n  }\n\n  componentDidMount() {\n    this.eventType();\n  }\n\n  eventType() {\n    let eventtype = [];\n    const urleventtype = \"http://localhost:3000/eventtype\";\n    fetch(urleventtype).then(response => response.json()).then(res => {\n      $.each(res.eventtype, function (index, value) {\n        eventtype.push({\n          id: value.id,\n          name: value.name\n        });\n      });\n      this.setState(() => ({\n        eventtype\n      }));\n    }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n  }\n\n  componentWillMount() {\n    localStorage.getItem('user') && this.setState({\n      users: JSON.parse(localStorage.getItem('users')),\n      isLoading: false\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('userList', JSON.stringify(nextState.userList));\n  }\n\n  render() {\n    const {\n      userName,\n      surname,\n      Email,\n      eventtype\n    } = this.state;\n    let subscribeToDom = \"\";\n\n    if (eventtype !== undefined) {\n      subscribeToDom = eventtype.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success m-2\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-borderless usertable\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: userName,\n                    onChange: e => this.handleChange(e, \"userName\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Surname :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: surname,\n                    onChange: e => this.handleChange(e, \"surname\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Email :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    value: Email,\n                    onChange: e => this.handleChange(e, \"Email\"),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"User Group :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"userGroup\",\n                    className: \"browser-default custom-select\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"admin\",\n                      children: \"Admin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"user\",\n                      defaultValue: true,\n                      children: \"User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Subscribe To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"subscribeTo\",\n                    className: \"browser-default custom-select\",\n                    multiple: true,\n                    children: subscribeToDom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/Users/shweta/task/sports/src/componants/addUser.js"],"names":["React","Component","axios","$","AddUser","constructor","props","handleSubmit","event","userName","surname","Email","userList","state","post","name","userGroup","val","subscribeto","credentials","withCredentials","then","response","push","setState","catch","error","console","log","preventDefault","bind","eventType","handleChange","e","textFor","ele","target","value","componentWillMount","componentDidMount","eventtype","urleventtype","fetch","json","res","each","index","id","localStorage","getItem","users","JSON","parse","isLoading","componentWillUpdate","nextProps","nextState","setItem","stringify","render","subscribeToDom","undefined","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: this.props.userList,\n            userName: \"\",\n            surname: \"\",\n            Email: \"\",\n            userGroup: \"\",\n            subscribeto: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.eventType = this.eventType.bind(this);\n    }\n\n    handleChange(e, textFor) {\n        const ele = e.target.value;\n        switch (textFor) {\n            case \"userName\":\n                this.setState({ userName: ele });\n                break;\n            case \"surname\":\n                this.setState({ surname: ele });\n                break;\n            case \"Email\":\n                this.setState({ Email: ele });\n                break;\n        }\n    }\n\n    componentWillMount() {\n        this.eventType();\n    }\n\n    componentDidMount() {\n        this.eventType();\n    }\n\n    eventType(){\n        let eventtype = [];\n        const urleventtype = \"http://localhost:3000/eventtype\";\n\n        fetch(urleventtype)\n            .then(response => response.json())\n            .then(res => {\n                $.each(res.eventtype, function (index, value) {\n                    eventtype.push({\n                        id: value.id,\n                        name: value.name\n                    });\n                });\n\n                this.setState(() => ({ eventtype }));\n            }).catch(() => console.log(\"Canâ€™t access \" + urleventtype + \" response. Blocked by browser?\"));\n    }\n\n    componentWillMount() {\n        localStorage.getItem('user') && this.setState({\n          users: JSON.parse(localStorage.getItem('users')),\n          isLoading: false\n        });\n      }\n\n    handleSubmit = (event) => {\n        const { userName, surname, Email, userList } = this.state;\n\n        axios\n            .post(\n                \"http://localhost:3000/users/:name\",\n                {\n                    name: userName,\n                    surname,\n                    Email,\n                    userGroup: $('#userGroup').val(),\n                    subscribeto: $('#subscribeTo').val()\n                },\n                { credentials: 'include' },\n                { withCredentials: true }\n            )\n            .then(response => { \n                userList.push({\n                    name: userName,\n                    surname,\n                    Email,\n                    userGroup: $('#userGroup').val(),\n                    subscribeto: $('#subscribeTo').val()\n                });\n                this.setState({ userList });\n            })\n            .catch(error => {\n                console.log(\"login error\", error);\n            });\n        event.preventDefault();\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem('userList', JSON.stringify(nextState.userList));\n      }\n\n\n    render() {\n        const { userName, surname, Email, eventtype } = this.state;\n        let subscribeToDom = \"\";\n        if (eventtype !== undefined) {\n            subscribeToDom = eventtype.map((item) => {\n                return (\n                    <option key={item.id } value={item.id}>{item.name}</option>\n                )\n            })\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row d-flex justify-content-end\">\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-success m-2\">\n                            Submit\n                    </button>\n                    </div>\n                    <div className=\"row\">\n                        <table className=\"table table-borderless usertable\">\n                            <tbody>\n                                <tr>\n                                    <td >\n                                        User Name :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={userName}\n                                            onChange={(e) => this.handleChange(e, \"userName\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Surname :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            value={surname}\n                                            onChange={(e) => this.handleChange(e, \"surname\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        User Email :\n                                </td>\n                                    <td>\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            value={Email}\n                                            onChange={(e) => this.handleChange(e, \"Email\")}\n                                            required\n                                        />\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        User Group :\n                                </td>\n                                    <td>\n                                        <select id=\"userGroup\" className=\"browser-default custom-select\">\n                                            <option value=\"admin\">Admin</option>\n                                            <option value=\"user\" defaultValue>User</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr >\n                                    <td>\n                                        Subscribe To :\n                                 </td>\n                                    <td>\n                                        <select id=\"subscribeTo\" className=\"browser-default custom-select\" multiple>\n                                            {subscribeToDom}\n                                        </select>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}